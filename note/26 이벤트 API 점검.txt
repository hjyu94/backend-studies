26 이벤트 API 점검

토큰 발급 받기
    ● POST /oauth/token
    ● BASIC authentication 헤더
        ○ client Id(myApp) + client secret(pass)
    ● 요청 본문 폼
        ○ username: admin@email.com
        ○ password: admin
        ○ grant_type: password

토큰 갱신하기
    ● POST /oauth/token
    ● BASIC authentication 헤더
        ○ client Id(myApp) + client secret(pass)
    ● 요청 본문 폼
        ○ token: 처음에 발급받았던 refersh 토큰
        ○ grant_type: refresh_token

이벤트 목록 조회 API
    ● 로그인 했을 때
        ○ 이벤트 생성 링크 제공

이벤트 조회
    ● 로그인 했을 때
        ○ 이벤트 Manager인 경우에는 이벤트 수정 링크 제공


[실습]

1. 액세스토큰 받아오기
    POST http://localhost:8080/oauth/token
    Auth:
        Basic Auth / Username [myApp] Password [pass]
    Body:
        {
            usename:admin@email.com,
            password:admin,
            grant_type:password
        }
    Send!
    Response
        {
            "access_token": "94f5ec04-cd65-4629-b3ca-7ba11c8eb6a8",
            "token_type": "bearer",
            "refresh_token": "4254f0a8-8f29-4459-ad54-894ae1cf84f7",
            "expires_in": 200,
            "scope": "read write"
        }


2. 이벤트 목록 조회
    GET http://localhost:8080/api/events
    인증을 안한 상태에서 보면 이벤트 목록이 잘 조회되는데
    인증 한 후면 조회가 되지 않는다! access_denied

    ResourceConfig
        annonymous() -> permitAll()
        로그인을 하지 않은 사람만 볼 수 있었던 것

    GET http://localhost:8080/api/events
    Auth:
        Type: Bearer Token / Token [...]
    Send!
    Access
    Response
        {
            "_embedded": {
                "eventList": [
                    {
                        "id": 3,
                        "name": "Spring",
                        "description": "REST API Development with Spring",
                        "beginEnrollmentDateTime": "2018-09-01T00:00:00",
                        "closeEnrollmentDateTime": "2018-10-31T00:00:00",
                        "beginEventDateTime": "2018-11-23T14:00:00",
                        "endEventDateTime": "2018-11-24T14:00:00",
                        "location": "강남역 D2 스타텁 팩토리",
                        "basePrice": 0,
                        "maxPrice": 0,
                        "limitOfEnrollment": 100,
                        "offline": false,
                        "free": true,
                        "eventStatus": "DRAFT",
                        "manager": null,
                        "_links": {
                            "self": {
                                "href": "http://localhost:8080/api/events/3"
                            }
                        }
                    }
                ]
            },
            "_links": {
                "self": {
                    "href": "http://localhost:8080/api/events?page=0&size=20"
                },
                "profile": {
                    "href": "/docs/index.html#resources-events-list"
                }
            },
            "page": {
                "size": 20,
                "totalElements": 1,
                "totalPages": 1,
                "number": 0
            }
        }

    현재 로그인 했을 때 목록을 조회하면
    self, profile link만 있는데 이벤트 생성 링크를 만들어야 한다


3 이벤트 생성
    POST http://localhost:8080/api/events
    인증 정보 없이 Send 하면 unauthorized error.
    인증 정보 포함하고, Body에 Event 정보를 채워서 보내면 이벤트가 생성된다

    POST http://localhost:8080/api/events
    Auth:
        Type: Bearer Token / Token [...]
    Body:
        // target/generated-snippets/create-events/http-request.adoc 참조.
        {
          "name" : "Spring",
          "description" : "REST API Development with Spring",
          "beginEnrollmentDateTime" : "2018-09-01T00:00:00",
          "closeEnrollmentDateTime" : "2018-10-31T00:00:00",
          "beginEventDateTime" : "2018-11-23T14:00:00",
          "endEventDateTime" : "2018-11-24T14:00:00",
          "location" : "강남역 D2 스타텁 팩토리",
          "basePrice" : 0,
          "maxPrice" : 0,
          "limitOfEnrollment" : 100
        }
    Send!
    Response
        {
            "id": 4,
            "name": "Spring",
            "description": "REST API Development with Spring",
            "beginEnrollmentDateTime": "2018-09-01T00:00:00",
            "closeEnrollmentDateTime": "2018-10-31T00:00:00",
            "beginEventDateTime": "2018-11-23T14:00:00",
            "endEventDateTime": "2018-11-24T14:00:00",
            "location": "강남역 D2 스타텁 팩토리",
            "basePrice": 0,
            "maxPrice": 0,
            "limitOfEnrollment": 100,
            "offline": false,
            "free": true,
            "eventStatus": "DRAFT",
            "manager": null,
            "_links": {
                "self": {
                    "href": "http://localhost:8080/api/events/4"
                },
                "query-events": {
                    "href": "http://localhost:8080/api/events"
                },
                "update-event": {
                    "href": "http://localhost:8080/api/events/4"
                },
                "profile": {
                    "href": "/docs/index.html#resources-events-create"
                }
            }
        }

    로그인 상태라면 이벤트가 정상적으로 만들어지고
    self, query-events, update-event, profile link가 나온다.


4 이벤트 조회
    GET http://localhost:8080/api/events/1
    Response
        {
            "id": 5,
            "name": "Spring",
            "description": "REST API Development with Spring",
            "beginEnrollmentDateTime": "2018-09-01T00:00:00",
            "closeEnrollmentDateTime": "2018-10-31T00:00:00",
            "beginEventDateTime": "2018-11-23T14:00:00",
            "endEventDateTime": "2018-11-24T14:00:00",
            "location": "강남역 D2 스타텁 팩토리",
            "basePrice": 0,
            "maxPrice": 0,
            "limitOfEnrollment": 100,
            "offline": false,
            "free": true,
            "eventStatus": "DRAFT",
            "manager": null,
            "_links": {
                "self": {
                    "href": "http://localhost:8080/api/events/5"
                },
                "profile": {
                    "href": "/docs/index.html#resources-events-get"
                }
            }
        }

    self, profile link가 나온다.
    해당 이벤트의 매니져라면 수정할 수 있는 링크를 제공해야 한다
