34. HTTP 요청 맵핑하기 4부: 헤더와 매개변수


특정한 헤더가 있는 요청을 처리하고 싶은 경우
● @RequestMapping( headers = “key”)

특정한 헤더가 없는 요청을 처리하고 싶은 경우
● @RequestMapping( headers = “ ! key”)

특정한 헤더 키/값이 있는 요청을 처리하고 싶은 경우
● @RequestMapping( headers = “key=value”)


특정한 요청 매개변수 키를 가지고 있는 요청을 처리하고 싶은 경우
● @RequestMapping( params = “a”)

특정한 요청 매개변수가 없는 요청을 처리하고 싶은 경우
● @RequestMapping( params = “ ! a”)

특정한 요청 매개변수 키/값을 가지고 있는 요청을 처리하고 싶은 경우
● @RequestMapping( params = “a=b”)


[실습]
    @GetMapping("/hello")
    public String hello() { return "hello"; }

    mockMvc.perform(get("/hello").header(HttpHeaders.FROM, "localhost"))
        .andDo(print())
        .andExpect(status().isOk())

    테스트 성공!

    @GetMapping(value = "/hello", headers = HttpHeaders.FROM) // 헤더가 있는 경우만 처리하겠다!

    테스트 성공!

    @GetMapping(value = "/hello", headers = HttpHeaders.ACCEPT_LANGUAGE)

    테스트 실패!

    @GetMapping(value = "/hello", headers = "!" + HttpHeaders.FROM) // 헤더에 from 정보가 없어야만 한다!

    @GetMapping(value = "/hello", headers = HttpHeaders.FROM + "=" + "111") // 헤더에 from 정보가 정확히 111이어야만 한다

    요청에 보내는 파라미터들? /hello?name=keesun

    @GetMapping(value = "/hello", params = "name")
    이 핸들러로 처리하고 싶으면 그 요청은 반드시 name 이라는 파라미터가 있어야 한다.

    mockMvc.perform(get("/hello").param("name", "keesun")
        .andDo(print())
        .andExpect(status().isOk())

    @GetMapping(value = "/hello", params = "name=spring")
    이 핸들러로 처리하고 싶으면 그 요청은 반드시 name이 spring 이라는 파라미터가 있어야 한다.



