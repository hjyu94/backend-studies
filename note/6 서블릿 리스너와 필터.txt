6. 서블릿 리스너와 필터


서블릿 리스너
    ● 웹 애플리케이션에서 발생하는 주요 이벤트를 감지하고
    각 이벤트에 특별한 작업이 필요한 경우에 사용할 수 있다.

        ○ 서블릿 컨텍스트 수준의 이벤트
            ■ 컨텍스트 라이프사이클 이벤트 (컨텍스트가 만들어지고, 지워지는 등의 이벤트)
            ■ 컨텍스트 애트리뷰트 변경 이벤트
        ○ 세션 수준의 이벤트
            ■ 세션 라이프사이클 이벤트
            ■ 세션 애트리뷰트 변경 이벤트


서블릿 필터
    ● 들어온 요청을 서블릿으로 보내고, 또 서블릿이 작성한 응답을 클라이언트로 보내기 전에 특별한 처리가 필요한 경우에 사용할 수 있다.
    ● 체인 형태의 구조

    doGet() 요청이 서블릿으로 가기 전에 전처리 기능을 하고 싶은 경우 필터를 사용한다.
    여러개의 서블릿에 추가적인 작업을 할 수 있고, 특정 url 에 추가적인 작업을 할 수 있다.

    필터는 동시다발적으로 실행되는게 아니라 체인 형태의 구조인데
    web.xml 에 정의된 순서대로 실행되며
    반드시 이 다음 체인으로 전달되도록 작성해야 서블릿까지 도달한다.

    필터에서 실제 서블릿까지 가기 전에 걸러내는 필터라면
    다음 체인으로 응답을 보내지 않고 (서블릿으로 도착하지 못하고)
    바로 서블릿 컨테이너로 응답을 보내기도 한다.

    (서블릿으로 도착하거나, 서블릿 컨테이너로 돌아가야 한다)

                      |-----(request)---->|
    Servlet Container | FilterA | FilterB | Servlet
                      |<----(response)----|


참고
    ● https://docs.oracle.com/cd/B14099_19/web.1012/b14017/filters.htm#i1000654


서블릿 리스너 ex
    서블릿 컨테이너가 구동될 때 데이터베이스 커넥션을 맺어놓으면
    데이터베이스 커넥션을 서블릿 애플리케이션에 제공할 수 있다.

    서블릿 애플리케이션은
    서블릿 컨텍스트라는 곳에 들어있는 서블릿 애트리뷰트들에 들어있는 데이터베이스 커넥션을 꺼내 사용할 수 있다.
    서블릿 컨테이너가 종료되는 시점에 서블릿 컨텍스트 리스너를 활용해서 db 커넥션을 정리하는 일등을 할 수 있다.

    서블릿 컨텍스트 수준의 컨텍스트 라이프사이클 이벤트를 감지하는 리스너(ServletContextListener) 생성

        public class MyListener implements ServletContextListener {
            @Override
            public void contextInitialized(ServletContextEvent sce){
                println("Context Initialized");
                sce.getServletContext().setAttribute("name", "keesun");
            }

            @Override
            public void contextDestroyed(ServletContextEvent sce){
                println("Context Destroyed");
            }
        }

    web.xml에 리스너 등록하기
        <web-app>
          <display-name>Archetype Created Web Application</display-name>

          <listener>
            <listener-class>me.hjeong.MyListener</listener-class>
          </listener>

          <servlet>
            <servlet-name>hello</servlet-name>
            <servlet-class>me.hjeong.HelloServlet</servlet-class>
          </servlet>

          <servlet-mapping>
            <servlet-name>hello</servlet-name>
            <url-pattern>/hello</url-pattern>
          </servlet-mapping>
        </web-app>


    리스너들은 여러개의 서블릿이 공통적으로 사용하는 객체들을 넣어두는 용도로 사용 가능.

    리스너들은 서블릿 컨테이너 위에(on) 있는 개념
    리스너들이 서블릿 컨테이너 변경을 감지할 수 있도록 서블릿 컨테이너에 등록이 되는 개념.
    필터는 서블릿 컨테이너가 어떤 요청을 받으면 서블릿으로 가기 전에 필터를 거쳐서 가는 개념.

    리스너가 넣어준 값을 꺼내서 서블릿에서 사용해보자

        class HelloServlet extends HttpServlet {
            protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
                resp.getWriter().println("<h1>Hello " + getName() + "</h1>");
            }

            private Object getName() {
                return getServletContext().getAttribute("name");
            }
        }


서블릿 필터 ex
    필터 사용해보기
        import javax.servlet.*;

        class MyFilter implements Filter {
            @Override
            public void init(FilterConfig filterConfig) {
                println("Filter Init");
            }
            @Override
            public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)
                                throws IOException, ServletException {
                println("Filter");
                chain.doFilter(request, response);
                // 반드시 다음 필터로 연결해줘야 한다.
                // 맨 마지막 필터였다면 서블릿으로 연결시켜준다
                // 서블릿에서 필요한 매개변수 req, resp 가 전달된다.
                (HelloServlet::doGet(HttpServletRequest req, HttpServletResponse resp))
            }
            @Override
            public void destory(){
                println("Filter Destroy");
            }
        }

    web.xml에 필터 등록
        <web-app>
            <filter>
                <filter-name>myFilter</>
                <filiter-class>me.hjeong.MyFilter</>
            </>
            <filter-mapping>
                <filter-name>myFilter</>
                <servlet-mapping>hello</>
            </>
        </>

The content of element type "web-app" must match
"(icon?,display-name?,description?,distributable?,context-param*,filter*,filter-mapping*,listener*,servlet*,servlet-mapping*,session-config?,mime-mapping*,welcome-file-list?,error-page*,taglib*,resource-env-ref*,resource-ref*,security-constraint*,login-config?,security-role*,env-entry*,ejb-ref*,ejb-local-ref*)".
-> 요소들 순서 맞춰주기

    <web-app>
      <display-name>Archetype Created Web Application</display-name>

      <filter>
        <filter-name>myFilter</filter-name>
        <filter-class>me.hjeong.MyFilter</filter-class>
      </filter>
      <filter-mapping>
        <filter-name>myFilter</filter-name>
        <servlet-name>hello</servlet-name>
      </filter-mapping>

      <listener>
        <listener-class>me.hjeong.MyListener</listener-class>
      </listener>

      <servlet>
        <servlet-name>hello</servlet-name>
        <servlet-class>me.hjeong.HelloServlet</servlet-class>
      </servlet>
      <servlet-mapping>
        <servlet-name>hello</servlet-name>
        <url-pattern>/hello</url-pattern>
      </servlet-mapping>
    </web-app>

Run!
    "C:\Program Files\apache-tomcat-9.0.34\bin\catalina.bat" run
    [2020-04-21 11:45:05,994] Artifact _3_servletlistenerfilter:war exploded: Waiting for server connection to start artifact deployment...
    Using CATALINA_BASE:   "C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc"
    Using CATALINA_HOME:   "C:\Program Files\apache-tomcat-9.0.34"
    Using CATALINA_TMPDIR: "C:\Program Files\apache-tomcat-9.0.34\temp"
    Using JRE_HOME:        "C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\jbr"
    Using CLASSPATH:       "C:\Program Files\apache-tomcat-9.0.34\bin\bootstrap.jar;C:\Program Files\apache-tomcat-9.0.34\bin\tomcat-juli.jar"
    NOTE: Picked up JDK_JAVA_OPTIONS:  --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
    21-Apr-2020 23:45:07.989 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log �꽌踰� 踰꾩쟾 �씠由�:        Apache Tomcat/9.0.34
    21-Apr-2020 23:45:07.994 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log Server 鍮뚮뱶 �떆媛�:          Apr 3 2020 12:02:52 UTC
    21-Apr-2020 23:45:07.995 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log Server 踰꾩쟾 踰덊샇:         9.0.34.0
    21-Apr-2020 23:45:07.995 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log �슫�쁺泥댁젣 �씠由�:               Windows 10
    21-Apr-2020 23:45:07.995 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log �슫�쁺泥댁젣 踰꾩쟾:            10.0
    21-Apr-2020 23:45:07.995 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log �븘�궎�뀓泥�:          amd64
    21-Apr-2020 23:45:07.995 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log �옄諛� �솃:             C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\jbr
    21-Apr-2020 23:45:07.996 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log JVM 踰꾩쟾:           11.0.6+8-b520.43
    21-Apr-2020 23:45:07.996 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log JVM 踰ㅻ뜑:            JetBrains s.r.o
    21-Apr-2020 23:45:07.996 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc
    21-Apr-2020 23:45:07.996 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         C:\Program Files\apache-tomcat-9.0.34
    21-Apr-2020 23:45:07.998 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: --add-opens=java.base/java.lang=ALL-UNNAMED
    21-Apr-2020 23:45:07.998 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: --add-opens=java.base/java.io=ALL-UNNAMED
    21-Apr-2020 23:45:07.998 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
    21-Apr-2020 23:45:07.998 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djava.util.logging.config.file=C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc\conf\logging.properties
    21-Apr-2020 23:45:07.998 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcom.sun.management.jmxremote=
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcom.sun.management.jmxremote.port=1099
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcom.sun.management.jmxremote.ssl=false
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcom.sun.management.jmxremote.password.file=C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc\jmxremote.password
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcom.sun.management.jmxremote.access.file=C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc\jmxremote.access
    21-Apr-2020 23:45:08.003 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djava.rmi.server.hostname=127.0.0.1
    21-Apr-2020 23:45:08.004 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djdk.tls.ephemeralDHKeySize=2048
    21-Apr-2020 23:45:08.004 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dignore.endorsed.dirs=
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcatalina.base=C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Dcatalina.home=C:\Program Files\apache-tomcat-9.0.34
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.startup.VersionLoggerListener.log 紐낅졊 �뻾 �븘洹쒕㉫�듃: -Djava.io.tmpdir=C:\Program Files\apache-tomcat-9.0.34\temp
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR 踰꾩쟾 [1.7.0]�쓣(瑜�) �궗�슜�븳, APR 湲곕컲 Apache Tomcat Native �씪�씠釉뚮윭由� [1.2.23]�쓣(瑜�) 濡쒕뱶�뻽�뒿�땲�떎.
    21-Apr-2020 23:45:08.005 �젙蹂� [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR �슜�웾�젙蹂대뱾: IPv6 [true], sendfile [true], accept filters [false], random [true].
    21-Apr-2020 23:45:08.006 �젙蹂� [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL �꽕�젙: useAprConnector [false], useOpenSSL [true]
    21-Apr-2020 23:45:08.012 �젙蹂� [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL�씠 �꽦怨듭쟻�쑝濡� 珥덇린�솕�릺�뿀�뒿�땲�떎: [OpenSSL 1.1.1c  28 May 2019]
    21-Apr-2020 23:45:08.336 �젙蹂� [main] org.apache.coyote.AbstractProtocol.init �봽濡쒗넗肄� �빖�뱾�윭 ["http-nio-8080"]�쓣(瑜�) 珥덇린�솕�빀�땲�떎.
    21-Apr-2020 23:45:08.377 �젙蹂� [main] org.apache.catalina.startup.Catalina.load [643] 諛�由ъ큹 �궡�뿉 �꽌踰꾧� 珥덇린�솕�릺�뿀�뒿�땲�떎.
    21-Apr-2020 23:45:08.442 �젙蹂� [main] org.apache.catalina.core.StandardService.startInternal �꽌鍮꾩뒪 [Catalina]�쓣(瑜�) �떆�옉�빀�땲�떎.
    21-Apr-2020 23:45:08.442 �젙蹂� [main] org.apache.catalina.core.StandardEngine.startInternal �꽌踰� �뿏吏꾩쓣 �떆�옉�빀�땲�떎: [Apache Tomcat/9.0.34]
    21-Apr-2020 23:45:08.456 �젙蹂� [main] org.apache.coyote.AbstractProtocol.start �봽濡쒗넗肄� �빖�뱾�윭 ["http-nio-8080"]�쓣(瑜�) �떆�옉�빀�땲�떎.
    21-Apr-2020 23:45:08.469 �젙蹂� [main] org.apache.catalina.startup.Catalina.start �꽌踰꾧� [92] 諛�由ъ큹 �궡�뿉 �떆�옉�릺�뿀�뒿�땲�떎.
    Connected to server
    [2020-04-21 11:45:08,671] Artifact _3_servletlistenerfilter:war exploded: Artifact is being deployed, please wait...
    21-Apr-2020 23:45:09.809 �젙蹂� [RMI TCP Connection(3)-127.0.0.1] org.apache.jasper.servlet.TldScanner.scanJars �쟻�뼱�룄 �븯�굹�쓽 JAR媛� TLD�뱾�쓣 李얘린 �쐞�빐 �뒪罹붾릺�뿀�쑝�굹 �븘臾� 寃껊룄 李얠� 紐삵뻽�뒿�땲�떎. �뒪罹뷀뻽�쑝�굹 TLD媛� �뾾�뒗 JAR�뱾�쓽 �쟾泥� 紐⑸줉�쓣 蹂댁떆�젮硫�, 濡쒓렇 �젅踰⑥쓣 �뵒踰꾧렇 �젅踰⑤줈 �꽕�젙�븯�떗�떆�삤. �뒪罹� 怨쇱젙�뿉�꽌 遺덊븘�슂�븳 JAR�뱾�쓣 嫄대꼫�쎇硫�, �떆�뒪�뀥 �떆�옉 �떆媛꾧낵 JSP 而댄뙆�씪 �떆媛꾩쓣 �떒異뺤떆�궗 �닔 �엳�뒿�땲�떎.
    Context initialized
    21-Apr-2020 23:45:10.728 寃쎄퀬 [RMI TCP Connection(3)-127.0.0.1] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom [SHA1PRNG] �븣怨좊━利섏쓣 �궗�슜�븯�뿬, �꽭�뀡 ID瑜� �깮�꽦�븯湲� �쐞�븳 SecureRandom 媛앹껜瑜� �깮�꽦�븯�뒗�뜲, [892] 諛�由ъ큹媛� �냼�슂�릱�뒿�땲�떎.
    Filter Init
    [2020-04-21 11:45:10,755] Artifact _3_servletlistenerfilter:war exploded: Artifact is deployed successfully
    [2020-04-21 11:45:10,756] Artifact _3_servletlistenerfilter:war exploded: Deploy took 2,084 milliseconds
    21-Apr-2020 23:45:18.466 �젙蹂� [Catalina-utility-2] org.apache.catalina.startup.HostConfig.deployDirectory �쎒 �븷�뵆由ъ��씠�뀡 �뵒�젆�넗由� [C:\Program Files\apache-tomcat-9.0.34\webapps\manager]�쓣(瑜�) 諛곗튂�빀�땲�떎.
    21-Apr-2020 23:45:18.555 �젙蹂� [Catalina-utility-2] org.apache.catalina.startup.HostConfig.deployDirectory �쎒 �븷�뵆由ъ��씠�뀡 �뵒�젆�넗由� [C:\Program Files\apache-tomcat-9.0.34\webapps\manager]�뿉 ���븳 諛곗튂媛� [89] 諛�由ъ큹�뿉 �셿猷뚮릺�뿀�뒿�땲�떎.
    init
    doFilter
    doGet

    doFilter
    doGet

    doFilter
    doGet

    doFilter
    doGet

    doFilter
    doGet

    "C:\Program Files\apache-tomcat-9.0.34\bin\catalina.bat" stop
    Using CATALINA_BASE:   "C:\Users\hjeon\.IntelliJIdea2019.3\system\tomcat\Unnamed_demospringmvc"
    Using CATALINA_HOME:   "C:\Program Files\apache-tomcat-9.0.34"
    Using CATALINA_TMPDIR: "C:\Program Files\apache-tomcat-9.0.34\temp"
    Using JRE_HOME:        "C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\jbr"
    Using CLASSPATH:       "C:\Program Files\apache-tomcat-9.0.34\bin\bootstrap.jar;C:\Program Files\apache-tomcat-9.0.34\bin\tomcat-juli.jar"
    NOTE: Picked up JDK_JAVA_OPTIONS:  --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
    21-Apr-2020 23:45:45.987 �젙蹂� [main] org.apache.catalina.core.StandardServer.await �뀱�떎�슫 �룷�듃瑜� �넻�빐 �쑀�슚�븳 �뀱�떎�슫 紐낅졊�쓣 諛쏆븯�뒿�땲�떎. �꽌踰� �씤�뒪�꽩�뒪瑜� 以묒��떆�궢�땲�떎.
    21-Apr-2020 23:45:45.988 �젙蹂� [main] org.apache.coyote.AbstractProtocol.pause �봽濡쒗넗肄� �빖�뱾�윭 ["http-nio-8080"]�쓣(瑜�) �씪�떆 �젙吏� 以�
    21-Apr-2020 23:45:46.826 �젙蹂� [main] org.apache.catalina.core.StandardService.stopInternal �꽌鍮꾩뒪 [Catalina]�쓣(瑜�) 以묒��떆�궢�땲�떎.
    destroy
    Filter destroyed
    Context Destroyed
    21-Apr-2020 23:45:46.852 �젙蹂� [main] org.apache.coyote.AbstractProtocol.stop �봽濡쒗넗肄� �빖�뱾�윭 ["http-nio-8080"]�쓣(瑜�) 以묒��떆�궢�땲�떎.
    21-Apr-2020 23:45:46.855 �젙蹂� [main] org.apache.coyote.AbstractProtocol.destroy �봽濡쒗넗肄� �빖�뱾�윭 ["http-nio-8080"]�쓣(瑜�) �냼硫몄떆�궢�땲�떎.
    Disconnected from server
