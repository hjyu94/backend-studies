15 스프링 REST Docs 소개

https://docs.spring.io/spring-restdocs/docs/2.0.2.RELEASE/reference/html5/
Document RESTful services by combining hand-written documentation with auto-generated snippets produced with Spring MVC Test.

[Introduction]
The aim of Spring REST Docs is to help you to produce documentation for your RESTful services that is accurate and readable.
Writing high-quality documentation is difficult.
One way to ease that difficulty is to use tools that are well-suited to the job.
To this end, Spring REST Docs uses Asciidoctor by default.
Asciidoctor processes plain text and produces HTML, styled and layed out to suit your needs.
If you prefer, Spring REST Docs can also be configured to use Markdown.
Spring REST Docs makes use of snippets produced by tests written
with Spring MVC’s test framework, Spring WebFlux’s WebTestClient or REST Assured 3.
This test-driven approach helps to guarantee the accuracy of your service’s documentation.
If a snippet is incorrect the test that produces it will fail.
Documenting a RESTful service is largely about describing its resources.
Two key parts of each resource’s description are the details of the HTTP requests that it consumes and the HTTP responses that it produces.
Spring REST Docs allows you to work with these resources and the HTTP requests and responses
, shielding your documentation from the inner-details of your service’s implementation.
This separation helps you to document your service’s API rather than its implementation.
It also frees you to evolve the implementation without having to rework the documentation.


REST Docs 코딩
● andDo(document(“doc-name”, snippets))
● snippets (문서 조각)
    ○ links()
    ○ requestParameters() + parameterWithName()
    ○ pathParameters() + parametersWithName()
    ○ requestParts() + partWithname()
    ○ requestPartBody()
    ○ requestPartFields()
    ○ requestHeaders() + headerWithName()
    ○ requestFields() + fieldWithPath()
    ○ responseHeaders() + headerWithName()
    ○ responseFields() + fieldWithPath()
    ○ ...
● Relaxed*
● Processor
    ○ preprocessRequest(prettyPrint())
    ○ preprocessResponse(prettyPrint())
    ○ ...

Constraint
    ● ​https://github.com/spring-projects/spring-restdocs/blob/v2.0.2.RELEASE/samples/res t-notes-spring-hateoas/src/test/java/com/example/notes/ApiDocumentation.java


