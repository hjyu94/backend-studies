18 Account 도메인 추가

OAuth2로 인증을 하려면 일단 Account 부터
    ● id  ● email  ● password  ● roles

AccountRoles
    ● ADMIN, USER

JPA 맵핑
    ● @Table(“Users”)

JPA enumeration collection mapping
    @ElementCollection(fetch = FetchType.EAGER)
    @Enumerated(EnumType.STRING)
    private Set<AccountRole> roles;

Event에 owner 추가
    @ManyToOne Account manager;




[ 실습 ]

    여태까지는 인증과 관련된 기능이 없다
    ex) 이벤트를 만들 때는 인증이 된 사용자만 만들 수 있어야 한다.
    ex) 수정할 때는 만든사람만 수정할 수 있어야 한다.

new package: accounts

Account
    @Entity
    @Getter @Setter @EqualsAndHashCode(of = "id")
    @Builder @NoArgsConstructor @AllArgsConstructor

    public class Account {
        @Id @GeneratedValue
        private Integer id;

        private String email;

        private String password;

        @ElementCollection(fetch = FetchType.EAGER)
        @Enumerated(value = EnumType.STRING)
        private Set<AccountRole> roles;
        // 기본적으로 fetch는 lazy fetch인데,
        // 가져올 롤이 매우 적고, account를 가지고 올 때마다 매번 필요하므로 eager fetch를 사용하자
    }

AccountRole
    public enum AccountRole {
        ADMIN, USER
    }

Event
    public class Event {
        @ManyToOne
        private Account manager;
    }
    Event에서만 manager를 참조할 수 있도록 단방향 매핑을 맺어준다.
    이벤트는 단 하나의 Account를 매니저로 가진다.
    매니져는 여러개의 이벤트를 가질 수 있다.
